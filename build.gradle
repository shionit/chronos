plugins {
  id 'org.springframework.boot' version '2.3.0.RELEASE'
  id 'io.spring.dependency-management' version '1.0.9.RELEASE'
  id 'java'
  id 'jacoco'
  id "com.github.spotbugs" version "4.3.0"
  id "pmd"
}

group = 'com.github.shionit'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation "net.logstash.logback:logstash-logback-encoder:${logstashLogbackEncoderVer}"
  compile "com.google.guava:guava:${guavaVer}"
  compile "io.springfox:springfox-swagger2:${swaggerVer}"
  compile "io.springfox:springfox-swagger-ui:${swaggerVer}"
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testImplementation 'org.springframework.security:spring-security-test'
}

test {
  useJUnitPlatform()
}

jacoco {
  toolVersion '0.8.5'
}
jacocoTestReport {
  reports {
    csv.enabled false
    html.enabled true
    xml.enabled true
  }
}

spotbugs {
  toolVersion = '4.0.3'
  effort = 'max'
  ignoreFailures = true
}

pmd {
  toolVersion '6.24.0'
  ignoreFailures = true
  consoleOutput = true
  ruleSetFiles = files("config/pmd/pmd-ruleset.xml")
  ruleSets = []
}
